# This is compose file using only local develop
version: "3.8"

services:
  db-pg:
    image: postgres:15-alpine
    container_name: db_postgres_container
    env_file: ./api/config/.env
#    environment:
#      POSTGRES_USER : ${APP_DB_NAME:-docker}
#      POSTGRES_USER : ${APP_DB_NAME:-docker}
#      POSTGRES_PASSWORD: ${APP_DB_PASSWORD:-docker}
#      POSTGRES_DB: ${APP_DB_NAME:-docker}
    volumes:
      - pg_data_vol1:/var/lib/postgresql/data
    networks:
      - mynet-st
#    ports:
#      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U docker -d docker" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    image: app/app_api
    container_name: app_api
#    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python main.py"
#    restart: on-failure
    depends_on:
      - db-pg
#      - amqp
    networks:
      - mynet-st
    ports:
      - "81:8000"
    env_file: ./api/config/.env
    environment:
      APP_API_PORT: 8000
#      APP_API_HOST: http://gui
#      APP_SERVICE_URL: amqp://guest:guest@amqp:5672/
      DJANGO_SETTINGS_MODULE: server.settings
      DJANGO_DATABASE_HOST: db-pg

#  amqp:
#    image: rabbitmq:3.8.2-management
#    ports:
#      - ${APP_AMQP_PORT:-5672}:5672
#      - ${APP_AMQP_GUI_PORT:-15672}:15672
#
#  balancer:
#    image: nginx:1.17.8
#    network_mode: host
#    volumes:
#      - ./nginx/develop.template:/etc/nginx/conf.d/default.template:ro
#    command: /bin/bash -c "envsubst '$${API_LOC},$${GUI_LOC},$${WS_LOC}' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
#    environment:
#      - API_LOC=${APP_API_LOC:-http://127.0.0.1:8000}
#      - GUI_LOC=${APP_GUI_LOC:-http://127.0.0.1:3000}
#      - WS_LOC=${APP_GUI_LOC:-http://127.0.0.1:8080}

networks:
  mynet-st:
    driver: bridge

volumes:
  pg_data_vol1: { }
